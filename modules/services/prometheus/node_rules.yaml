"groups":
  - name: alerts
    rules:
      - alert: HostSmartDiskWearoutLevelLowWarn
        expr: smartmon_media_wearout_indicator_value < 60
        for: 2m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host disk wearout level low
          description: "One of the node's disks has a SMART wearout level under 60%. Consider replacing?"

      - alert: HostSmartDiskWearoutLevelLowCrit
        expr: smartmon_media_wearout_indicator_value < 10
        for: 2m
        labels:
          severity: critical
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host disk wearout level very low
          description: "One of the node's disks has a SMART wearout level under 10%. Replace the disk!"

      - alert: HostOutOfMemory
        expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10
        for: 2m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host out of memory
          description: "Node memory is filling up (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostMemoryUnderMemoryPressure
        expr: rate(node_vmstat_pgmajfault[1m]) > 1000
        for: 2m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host memory under memory pressure
          description: "The node is under heavy memory pressure. High rate of major page faults\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostUnusualNetworkThroughputIn
        expr: sum by (instance) (rate(node_network_receive_bytes_total[2m])) / 1024 / 1024 > 100
        for: 5m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host unusual network throughput in
          description: "Host network interfaces are probably receiving too much data (> 100 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostUnusualNetworkThroughputOut
        expr: sum by (instance) (rate(node_network_transmit_bytes_total[2m])) / 1024 / 1024 > 100
        for: 5m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host unusual network throughput out
          description: "Host network interfaces are probably sending too much data (> 100 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostUnusualDiskReadRate
        expr: sum by (instance) (rate(node_disk_read_bytes_total[20m])) / 1024 / 1024 > 100
        for: 20m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host unusual disk read rate
          description: "Disk is probably reading too much data (> 100 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostUnusualDiskWriteRate
        expr: sum by (instance) (rate(node_disk_written_bytes_total[10m])) / 1024 / 1024 > 100
        for: 10m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host unusual disk write rate
          description: "Disk is probably writing too much data (> 100 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      # Please add ignored mountpoints in node_exporter parameters like
      # "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|run)($|/)".
      # Same rule using "node_filesystem_free_bytes" will fire when disk fills for non-root users.
      - alert: HostOutOfDiskSpace
        expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 3 and ON (instance, device, mountpoint) node_filesystem_readonly == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host out of disk space
          description: "Disk is almost full (< 3% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      # Please add ignored mountpoints in node_exporter parameters like
      # "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|run)($|/)".
      # Same rule using "node_filesystem_free_bytes" will fire when disk fills for non-root users.
      - alert: HostDiskWillFillIn24Hours
        expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) predict_linear(node_filesystem_avail_bytes{fstype!~"tmpfs"}[1h], 24 * 3600) < 0 and ON (instance, device, mountpoint) node_filesystem_readonly == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host disk will fill in 24 hours
          description: "Filesystem is predicted to run out of space within the next 24 hours at current write rate\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostOutOfInodes
        expr: node_filesystem_files_free{mountpoint ="/rootfs"} / node_filesystem_files{mountpoint="/rootfs"} * 100 < 10 and ON (instance, device, mountpoint) node_filesystem_readonly{mountpoint="/rootfs"} == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host out of inodes
          description: "Disk is almost running out of available inodes (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostInodesWillFillIn24Hours
        expr: node_filesystem_files_free{mountpoint ="/rootfs"} / node_filesystem_files{mountpoint="/rootfs"} * 100 < 10 and predict_linear(node_filesystem_files_free{mountpoint="/rootfs"}[1h], 24 * 3600) < 0 and ON (instance, device, mountpoint) node_filesystem_readonly{mountpoint="/rootfs"} == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host inodes will fill in 24 hours
          description: "Filesystem is predicted to run out of inodes within the next 24 hours at current write rate\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostUnusualDiskReadLatency
        expr: rate(node_disk_read_time_seconds_total[1m]) / rate(node_disk_reads_completed_total[1m]) > 0.1 and rate(node_disk_reads_completed_total[1m]) > 0
        for: 2m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host unusual disk read latency
          description: "Disk latency is growing (read operations > 100ms)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostUnusualDiskWriteLatency
        expr: rate(node_disk_write_time_seconds_total[1m]) / rate(node_disk_writes_completed_total[1h]) > 0.5 and rate(node_disk_writes_completed_total[1h]) > 0
        for: 1h
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host unusual disk write latency
          description: "Disk latency is growing (write operations > 100ms)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostHighCpuLoad
        expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100) > 80
        for: 0m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host high CPU load
          description: "CPU load is > 80%\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostCpuStealNoisyNeighbor
        expr: avg by(instance) (rate(node_cpu_seconds_total{mode="steal"}[5m])) * 100 > 10
        for: 0m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host CPU steal noisy neighbor
          description: "CPU steal is > 10%. A noisy neighbor is killing VM performances or a spot instance may be out of credit.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      # # 1000 context switches is an arbitrary number.
      # # Alert threshold depends on nature of application.
      # # Please read: https://github.com/samber/awesome-prometheus-alerts/issues/58
      # - alert: HostContextSwitching
      #   expr: (rate(node_context_switches_total[5m])) / (count without(cpu, mode) (node_cpu_seconds_total{mode="idle"})) > 1000
      #   for: 0m
      #   labels:
      #     severity: warning
      #   annotations:
      #   value: "{{ $value }}"
      #   labels: "{{ $labels }}"
      #     summary: Host context switching
      #     description: "Context switching is growing on node (> 1000 / s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostSwapIsFillingUp
        expr: (1 - (node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes)) * 100 > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host swap is filling up
          description: "Swap is filling up (>80%)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      # - alert: HostSystemdServiceCrashed
      #   expr: node_systemd_unit_state{state="failed"} == 1
      #   for: 0m
      #   labels:
      #     severity: warning
      #   annotations:
      #     value: "{{ $value }}"
      #     labels: "{{ $labels }}"
      #     summary: systemd service crashed
      #     description: "systemd service crashed\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      # - alert: HostPhysicalComponentTooHot
      #   expr: node_hwmon_temp_celsius > 75
      #   for: 5m
      #   labels:
      #     severity: warning
      #   annotations:
      #     value: "{{ $value }}"
      #     labels: "{{ $labels }}"
      #     summary: Host physical component too hot
      #     description: "Physical hardware component too hot\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostNodeOvertemperatureAlarm
        expr: node_hwmon_temp_crit_alarm_celsius == 1
        for: 0m
        labels:
          severity: critical
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host node overtemperature alarm
          description: "Physical node temperature alarm triggered\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostRaidArrayGotInactive
        expr: node_md_state{state="inactive"} > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host RAID array got inactive
          description: "RAID array {{ $labels.device }} is in degraded state due to one or more disks failures. Number of spare drives is insufficient to fix issue automatically.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostRaidDiskFailure
        expr: node_md_disks{state="failed"} > 0
        for: 2m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host RAID disk failure
          description: "At least one device in RAID array on {{ $labels.instance }} failed. Array {{ $labels.md_device }} needs attention and possibly a disk swap\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostOomKillDetected
        expr: increase(node_vmstat_oom_kill[1m]) > 0
        for: 0m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host OOM kill detected
          description: "OOM kill detected\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostEdacCorrectableErrorsDetected
        expr: increase(node_edac_correctable_errors_total[1m]) > 0
        for: 0m
        labels:
          severity: info
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host EDAC Correctable Errors detected
          description: "Host {{ $labels.instance }} has had {{ printf \"%.0f\" $value }} correctable memory errors reported by EDAC in the last 5 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostEdacUncorrectableErrorsDetected
        expr: node_edac_uncorrectable_errors_total > 0
        for: 0m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host EDAC Uncorrectable Errors detected
          description: "Host {{ $labels.instance }} has had {{ printf \"%.0f\" $value }} uncorrectable memory errors reported by EDAC in the last 5 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      # - alert: HostNetworkReceiveErrors
      #   expr: rate(node_network_receive_errs_total[2m]) / rate(node_network_receive_packets_total[2m]) > 0.01
      #   for: 2m
      #   labels:
      #     severity: warning
      #   annotations:
      #     value: "{{ $value }}"
      #     labels: "{{ $labels }}"
      #     summary: Host Network Receive Errors
      #     description: "Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} receive errors in the last two minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      # - alert: HostNetworkTransmitErrors
      #   expr: rate(node_network_transmit_errs_total[2m]) / rate(node_network_transmit_packets_total[2m]) > 0.01
      #   for: 2m
      #   labels:
      #     severity: warning
      #   annotations:
      #     value: "{{ $value }}"
      #     labels: "{{ $labels }}"
      #     summary: Host Network Transmit Errors
      #     description: "Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} transmit errors in the last two minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostNetworkInterfaceSaturated
        expr: (rate(node_network_receive_bytes_total{device!~"^tap.*"}[1m]) + rate(node_network_transmit_bytes_total{device!~"^tap.*"}[1m])) / node_network_speed_bytes{device!~"^tap.*"} > 0.8 < 10000
        for: 1m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host Network Interface Saturated
          description: "The network interface \"{{ $labels.device }}\" on \"{{ $labels.instance }}\" is getting overloaded.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostNetworkBondDegraded
        expr: (node_bonding_active - node_bonding_slaves) != 0
        for: 2m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host Network Bond Degraded
          description: "Bond \"{{ $labels.device }}\" degraded on \"{{ $labels.instance }}\".\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostConntrackLimit
        expr: node_nf_conntrack_entries / node_nf_conntrack_entries_limit > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host conntrack limit
          description: "The number of conntrack is approaching limit\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostClockSkew
        expr: (node_timex_offset_seconds > 0.05 and deriv(node_timex_offset_seconds[5m]) >= 0) or (node_timex_offset_seconds < -0.05 and deriv(node_timex_offset_seconds[5m]) <= 0)
        for: 2m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host clock skew
          description: "Clock skew detected. Clock is out of sync. Ensure NTP is configured correctly on this host.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostClockNotSynchronising
        expr: min_over_time(node_timex_sync_status[1m]) == 0 and node_timex_maxerror_seconds >= 16
        for: 2m
        labels:
          severity: warning
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host clock not synchronising
          description: "Clock not synchronising. Ensure NTP is configured on this host.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostRequiresReboot
        expr: node_reboot_required > 0
        for: 4h
        labels:
          severity: info
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Host requires reboot
          description: "{{ $labels.instance }} requires a reboot.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      # - alert: NginxHighHttp4xxErrorRate
      #   expr: sum(rate(nginx_http_response_count_total{status=~"^4.."}[1m])) / sum(rate(nginx_http_response_count_total[1m])) > 0.05
      #   for: 1m
      #   labels:
      #     severity: critical
      #   annotations:
      #     value: "{{ $value }}"
      #     labels: "{{ $labels }}"
      #     summary: Nginx high HTTP 4xx error rate
      #     description: "Too many HTTP requests with status 4xx (> 5%)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: NginxHighHttp5xxErrorRate
        expr: sum(rate(nginx_http_response_count_total{status=~"^5.."}[1m])) / sum(rate(nginx_http_response_count_total[1m])) > 0.05
        for: 1m
        labels:
          severity: critical
        annotations:
          value: "{{ $value }}"
          labels: "{{ $labels }}"
          summary: Nginx high HTTP 5xx error rate
          description: "Too many HTTP requests with status 5xx (> 5%)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - "name": "node-exporter.rules"
    "rules":
      - "expr": |
          count without (cpu) (
            count without (mode) (
              node_cpu_seconds_total{job="node"}
            )
          )
        "record": "instance:node_num_cpu:sum"
      - "expr": |
          1 - avg without (cpu, mode) (
            rate(node_cpu_seconds_total{job="node", mode="idle"}[1m])
          )
        "record": "instance:node_cpu_utilisation:rate1m"
      - "expr": |
          (
            node_load1{job="node"}
          /
            instance:node_num_cpu:sum{job="node"}
          )
        "record": "instance:node_load1_per_cpu:ratio"
      - "expr": |
          1 - (
            node_memory_MemAvailable_bytes{job="node"}
          /
            node_memory_MemTotal_bytes{job="node"}
          )
        "record": "instance:node_memory_utilisation:ratio"
      - "expr": |
          rate(node_vmstat_pgmajfault{job="node"}[1m])
        "record": "instance:node_vmstat_pgmajfault:rate1m"
      - "expr": |
          rate(node_disk_io_time_seconds_total{job="node", device!=""}[1m])
        "record": "instance_device:node_disk_io_time_seconds:rate1m"
      - "expr": |
          rate(node_disk_io_time_weighted_seconds_total{job="node", device!=""}[1m])
        "record": "instance_device:node_disk_io_time_weighted_seconds:rate1m"
      - "expr": |
          sum without (device) (
            rate(node_network_receive_bytes_total{job="node", device!="lo"}[1m])
          )
        "record": "instance:node_network_receive_bytes_excluding_lo:rate1m"
      - "expr": |
          sum without (device) (
            rate(node_network_transmit_bytes_total{job="node", device!="lo"}[1m])
          )
        "record": "instance:node_network_transmit_bytes_excluding_lo:rate1m"
      - "expr": |
          sum without (device) (
            rate(node_network_receive_drop_total{job="node", device!="lo"}[1m])
          )
        "record": "instance:node_network_receive_drop_excluding_lo:rate1m"
      - "expr": |
          sum without (device) (
            rate(node_network_transmit_drop_total{job="node", device!="lo"}[1m])
          )
        "record": "instance:node_network_transmit_drop_excluding_lo:rate1m"
